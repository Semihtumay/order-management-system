spring.application.name=order-service
server.port=8080


# Logging and other configurations
logging.level.org.springframework.web=DEBUG
logging.level.com.example=DEBUG


#PostgreSQL
spring.datasource.url=jdbc:postgresql://order-db:5432/order_service_db
spring.datasource.username=user
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

#Eureka
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka

#Kafka
spring.kafka.bootstrap-servers=kafka:9093
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Resilience4j CircuitBreaker
resilience4j.circuitbreaker.instances.productService.slidingWindowSize=10
resilience4j.circuitbreaker.instances.productService.minimumNumberOfCalls=3
resilience4j.circuitbreaker.instances.productService.permittedNumberOfCallsInHalfOpenState=2
resilience4j.circuitbreaker.instances.productService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.productService.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.productService.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.productService.recordExceptions[0]=org.springframework.web.client.HttpServerErrorException
resilience4j.circuitbreaker.instances.productService.recordExceptions[1]=org.springframework.web.client.HttpClientErrorException
resilience4j.circuitbreaker.instances.productService.ignoreExceptions[0]=java.io.IOException
resilience4j.circuitbreaker.instances.productService.ignoreExceptions[1]=java.net.SocketTimeoutException


